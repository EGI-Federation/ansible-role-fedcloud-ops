---
- name: Ensure cron is available
  apt:
    name: cron
    state: present
    update_cache: true

- name: Install docker
  include: docker.yml
  # this is only executed if explicity requested
  tags: ['never', 'docker']

- name: load site configuration
  include_vars:
    file: "{{ item }}"
    name: "{{ 'site_incl_vars_' ~ item|basename|splitext|first }}"
  with_fileglob:
  - "{{ site_config_dir }}/*.yaml"

- name: Set site configuration variable
  set_fact:
    sites: "{{ sites|default([]) + [lookup('vars', item)] }}"
  loop: "{{ query('varnames', '^site_incl_vars_(.*)$') }}"

- name: VO configuration
  block:
  - name: Create /etc/egi directory
    file:
      path: /etc/egi
      state: directory
      mode: 0755
  - name: Create /etc/egi/vos directory
    file:
      path: /etc/egi/vos
      state: directory
      mode: 0755
  # Loop over the VO configuration
  - name: create VO specific files
    include_tasks: vo-config.yml
    loop: "{{ vos | dict2items }}"
    no_log: True


- name: Configure cloud-info
  block:
  - name: Create /etc/egi directory
    file:
      path: /etc/egi
      state: directory
      mode: 0755
  - name: Create /etc/egi/cloud-info directory
    file:
      path: /etc/egi/cloud-info
      state: directory
      mode: 0755
  - name: Create /var/lock/cloud-info directory
    file:
      path: /var/lock/cloud-info
      state: directory
      mode: 0755
  - name: Create /var/log/cloud-info directory
    file:
      path: /var/log/cloud-info
      state: directory
      mode: 0755
  - name: site specific config
    include_tasks: cloud-info.yml
    vars:
      site: "{{ item }}"
      filename: "{{ item.gocdb | replace('.', '-') }}-{{ item.endpoint | hash('md5') }}"
    with_items:
    - "{{ sites }}"
    when: sites is iterable
